// Многомерные массивы

// PW 3
{
    // 1. Создайте массив, содержащий три значения: 1, 2 и 3.
    // 2. Трижды вложите исходный массив в новый массив.
    // 3. Выведите на экран значение 2 из любого массива.
}


// Объекты, доступ к объектам через названия свойства и через скобки []
// Добавление новых свойств в объект и изменение свойств через названия свойства и через скобки []

// PW 4
{
    //     
    // Создание объекта:

    // Создайте объект student с информацией о студенте, включая его имя, возраст, факультет и год обучения.
    // Доступ к свойствам через точечную нотацию:
    // Используя точечную нотацию, выведите в консоль имя и факультет студента.
    // Доступ к свойствам через скобки:
    // Используя скобки[], выведите в консоль возраст и год обучения студента.
    // Динамический доступ к свойствам:
    // Создайте переменную propertyToAccess и присвойте ей одно из свойств объекта student.
    // Используя эту переменную и скобки, выведите в консоль соответствующее значение свойства.
    // Изменение свойств:
    // Измените год обучения студента на следующий, используя как точечную нотацию, так и скобки.
    // Добавление новых свойств:
    // Добавьте свойство grades к объекту student, представляющее массив оценок студента.
}

// Object.keys(user)

// Объекты внутри массивов, объекты внутри объектов, массивы внутри объектов

// PW 5
{
    // 1. Создайте объект с именем people, содержащий пустой массив под на -
    // званием friends.
    // 2. Создайте три переменные, каждая из которых содержит объект, включа -
    // ющий имя, фамилию и значение ID вашего друга.
    // 3. Добавьте трех друзей в массив friends.
    // 4. Выведите результат на экран.

}

// Projects

// 1.
{
    // Управление массивом
    // Рассмотрите следующий массив:
    // const theList = ['Laurence', 'Svekis', true, 35, null, undefined, { test: 'one', score: 55 }, ['one', 'two']];
    // Используя методы pop(), push(), shift() и unshift(), добейтесь следующего результата в консоли:
    // ["FIRST", "Svekis", "MIDDLE", "hello World", "LAST"]
    // Вы можете предпринять следующие шаги или реализовать собственный подход:
    //  удалите первый и последний элементы массива;
    //  добавьте значение FIRST в начало массива;
    //  присвойте значение hello World четвертому элементу;
    //  присвойте значение MIDDLE элементу с третьим индексом;
    //  добавьте значение LAST в конечную позицию массива;
    //  выведите результат на экран.
}

// 2. 
{
    // Каталог продукции компании
    // В этом проекте вы реализуете структуру данных для каталога товаров и создадите
    // запросы для извлечения данных.
    // Создайте массив для хранения перечня товаров магазина.
    // Создайте три элемента, каждый из которых имеет свойства имени, модели,
    //     стоимости и количества.
    // Добавьте все три объекта в основной массив с помощью соответствующего
    // метода, а затем выведите получившийся массив на экран.
    // Получите доступ к значению количества вашего третьего товара и зафиксируйте его в консоли. Поэкспериментируйте, добавляя новые элементы и получая
    // доступ к большему числу элементов в вашей структуре данных.
}


let mass = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
let mass2 = ['Hello', 'Hi']
let mass3 = [mass2, mass2]

// console.log(mass3[0][0])


// 1. Создайте массив, содержащий три значения: 1, 2 и 3.
// 2. Трижды вложите исходный массив в новый массив.
// 3. Выведите на экран значение 2 из любого массива.


let people = {
    name: 'Visola',
    age: 17
}

let cat = {
    name: 'Barsik',
    age: 1,
    poroda: 'Vislouxaya',
    owner: "Shahzoda"
}

// console.log(cat.age)

let property = 'owner'
console.log(cat[property])  // 1

console.log(cat['age'])  // 2

console.log(cat.name) // 3

let dog = {
    name: "Reks",
    age: 1
}

console.log(dog)

dog.poroda = 'Chixuaxua' // 1
dog['poroda'] = 'Chixuaxua' // 2

dog.name = 'Mark'
dog['poroda'] = 'Xaski'
console.log(dog)


// Создание объекта:
// Создайте объект student с информацией о студенте, включая его имя, возраст, факультет и год обучения.
// Доступ к свойствам через точечную нотацию:
// Используя точечную нотацию, выведите в консоль имя и факультет студента.
// Доступ к свойствам через скобки:
// Используя скобки[], выведите в консоль возраст и год обучения студента.
// Динамический доступ к свойствам:
// Создайте переменную propertyToAccess и присвойте ей одно из свойств объекта student.
// Используя эту переменную и скобки, выведите в консоль соответствующее значение свойства.
// Изменение свойств:
// Измените год обучения студента на следующий, используя как точечную нотацию, так и скобки.
// Добавление новых свойств:
// Добавьте свойство grades к объекту student, представляющее массив оценок студента.

let school = {
    name: '44',
    phone_num: '998 99 999 99 99',
    studentsCount: 2000,
    teachers: 30,
    address: {
        street: 'Uchtepa'
    }

}

let school_keys = Object.keys(school)

console.log(school_keys)

// console.log(school['address']['street'])

// let library = {
//     books: [
//         {
//             name: 'Book 1'
//         },
//         {
//             name: 'Book 2'
//         }
//     ]
// }
// library.books.pop()
// let book4 = {
//     name: 'book 4'
// }
// library.books.push({name: 'Book 3'}, book4)
// console.log(library.books)


